/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.ProjectControl;
import Logic.Project;
import Logic.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class EditProject extends javax.swing.JPanel {
        ProjectControl projectControl;
        User sessionUser;
    /**
     * Creates new form EditProject
     */
    public EditProject(User sessionUser) {
        initComponents();
        projectControl = new ProjectControl();
        this.sessionUser=sessionUser;
        loadProject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerLabel = new javax.swing.JLabel();
        typeSearchCombo = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        searchButtom = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        editSelect = new javax.swing.JButton();
        backButtom = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        registerLabel.setBackground(new java.awt.Color(153, 153, 153));
        registerLabel.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        registerLabel.setForeground(new java.awt.Color(235, 30, 0));
        registerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/EditarProyectoTitle.png"))); // NOI18N
        registerLabel.setAlignmentY(0.0F);
        registerLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        typeSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Identificacion", "Nombre", "Lider", "Estado"}));
        typeSearchCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        nameTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        searchButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SearchButtom.png"))); // NOI18N
        searchButtom.setBorderPainted(false);
        searchButtom.setContentAreaFilled(false);
        searchButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Identificacion", "Nombre", "Descripcion", "Lider", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(projectTable);

        editSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/EditarButtom.png"))); // NOI18N
        editSelect.setBorderPainted(false);
        editSelect.setContentAreaFilled(false);
        editSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectActionPerformed(evt);
            }
        });

        backButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VolverButtom.png"))); // NOI18N
        backButtom.setBorderPainted(false);
        backButtom.setContentAreaFilled(false);
        backButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(registerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(202, 202, 202)
                                .addComponent(editSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(editSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void loadProject(){
        
    ArrayList <Object[]> projects = new ArrayList <>();
    projects = projectControl.listProject();
            
    DefaultTableModel modelo = (DefaultTableModel) projectTable.getModel();
    modelo.setRowCount(0);  

    for(int i=0; i<projects.size(); i++ ){
    modelo.addRow(projects.get(i));
    projectTable.setModel(modelo);
            }     
    }
    
    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        // TODO add your handling code here:
        Project project;
        String inputValue;
        String typeSearch;

        if(nameTextField.getText().length()>0){

            inputValue=nameTextField.getText();
            typeSearch=(String)typeSearchCombo.getSelectedItem();
            typeSearch = traduction(typeSearch);

            project = projectControl.searchProject(inputValue, typeSearch);

            if(project.getProjectCode()!= null){

                JOptionPane.showMessageDialog(null,"Bùsqueda Exitosa");
                listSearchProject(inputValue,typeSearch);
            }
            else{
                JOptionPane.showMessageDialog(null,"No se encontrò ningun Proyecto que coincida con la bùsqueda");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }
    }//GEN-LAST:event_searchButtomActionPerformed

    private void editSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectActionPerformed
        // TODO add your handling code here:
        EditProjectForm editProjectForm = new EditProjectForm(sessionUser);
        editProjectForm.setSize(639,483);
        editProjectForm.setLocation(0,0);
        
        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(editProjectForm);
        
        int row = projectTable.getSelectedRow();
        String code=projectTable.getValueAt(row, 0).toString();
        String identification=projectTable.getValueAt(row, 1).toString();
        String name=projectTable.getValueAt(row, 2).toString();
        String description=projectTable.getValueAt(row, 3).toString();
        String manager=projectTable.getValueAt(row, 4).toString();
        String state=projectTable.getValueAt(row, 5).toString();
        
        editProjectForm.setValues(code, identification, name, description, manager, state);
        
        
    }//GEN-LAST:event_editSelectActionPerformed

    private void backButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtomActionPerformed
        // TODO add your handling code here:
        MenuProject menuProject = new MenuProject(sessionUser);
        menuProject.setSize(639,483);
        menuProject.setLocation(0,0);

        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(menuProject);
    }//GEN-LAST:event_backButtomActionPerformed

    public String traduction(String word){
            
        switch (word) {
           case "Identificacion":
             word = "projectID";
             break;
             case "Nombre":
             word = "name";
             break;
             case "Lider":
             word = "namemanager";
             break;
             case "Estado":
             word = "state";
             break;
             default:
             System.out.println("error");
             break;} 
             
             return  word;
        }
    
    public void listSearchProject(String inputValue, String typeSearch){
            
        ArrayList <Object[]> projects = new ArrayList <>();
        projects = projectControl.listSearchProject(inputValue, typeSearch);
            
        DefaultTableModel modelo = (DefaultTableModel) projectTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<projects.size(); i++ ){
        modelo.addRow(projects.get(i));
        projectTable.setModel(modelo);
            }     
        }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButtom;
    private javax.swing.JButton editSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTable projectTable;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JButton searchButtom;
    private javax.swing.JComboBox<String> typeSearchCombo;
    // End of variables declaration//GEN-END:variables
}
