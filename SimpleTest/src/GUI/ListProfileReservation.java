/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.ReserveControl;
import Logic.Reserve;
import Logic.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class ListProfileReservation extends javax.swing.JPanel {
    ReserveControl reserveControl;
    User sessionUser;
    /**
     * Creates new form ListReservation
     */
    public ListProfileReservation(User sessionUser) {
        reserveControl = new ReserveControl();
        this.sessionUser=sessionUser;
        initComponents();
        loadProfileReserves();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reserveTable = new javax.swing.JTable();
        startLoanButtom = new javax.swing.JButton();
        showInfoProfileReserve = new javax.swing.JButton();
        cancelReservationButtom = new javax.swing.JButton();
        searchButtom = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        typeSearchCombo = new javax.swing.JComboBox<>();
        backButtom = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/MisReservasTitle.png"))); // NOI18N

        reserveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Reserva", "Articulo", "Fecha Inicial", "Fecha Final", "Fecha Prestamo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reserveTable.setSelectionBackground(new java.awt.Color(255, 0, 0));
        reserveTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(reserveTable);

        startLoanButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IniciarPrestamoButtom.png"))); // NOI18N
        startLoanButtom.setBorderPainted(false);
        startLoanButtom.setContentAreaFilled(false);
        startLoanButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startLoanButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startLoanButtomActionPerformed(evt);
            }
        });

        showInfoProfileReserve.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VerInfoButtom.png"))); // NOI18N
        showInfoProfileReserve.setBorderPainted(false);
        showInfoProfileReserve.setContentAreaFilled(false);
        showInfoProfileReserve.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showInfoProfileReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInfoProfileReserveActionPerformed(evt);
            }
        });

        cancelReservationButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/CancelarButton.png"))); // NOI18N
        cancelReservationButtom.setBorderPainted(false);
        cancelReservationButtom.setContentAreaFilled(false);
        cancelReservationButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelReservationButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReservationButtomActionPerformed(evt);
            }
        });

        searchButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SearchButtom.png"))); // NOI18N
        searchButtom.setBorderPainted(false);
        searchButtom.setContentAreaFilled(false);
        searchButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });

        nameTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        typeSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Articulo", "Estado"}));
        typeSearchCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        backButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VolverButtom.png"))); // NOI18N
        backButtom.setBorderPainted(false);
        backButtom.setContentAreaFilled(false);
        backButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButtom.setPreferredSize(new java.awt.Dimension(45, 45));
        backButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelReservationButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addComponent(startLoanButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218)
                        .addComponent(showInfoProfileReserve, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButtom))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cancelReservationButtom, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(startLoanButtom, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(showInfoProfileReserve))
                        .addContainerGap(62, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startLoanButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startLoanButtomActionPerformed
        // TODO add your handling code here:
        int row = reserveTable.getSelectedRow();
        if(row!=-1){
            if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==0){
                JOptionPane.showMessageDialog(null, "No puede iniciar el prestamo hasta que el estado de la reserva sea disponible.");
            } else{
                if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==1){
                    reserveControl.makeLoan("root",reserveTable.getValueAt(row, 1).toString()); // Aqui hay que poner el userCode del member. 
                    loadProfileReserves();
                    JOptionPane.showMessageDialog(null, "Se a iniciado el prestamo exitosamente y la reserva a Terminado.");
                    
                } else{
                    if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==2){
                        JOptionPane.showMessageDialog(null, "Esta reserva esta Terminada, no puede iniciar un prestamo por esta reserva.");
                    } else{
                        if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==3){
                            JOptionPane.showMessageDialog(null, "Esta reserva esta Incumplida, no puede iniciar un prestamo y se le a colocado una multa.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Esta reserva esta Cancelada, no puede iniciar un prestamo porque cancelo la reserva.");
                        }
                    }
                }
            }                      
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }
    }//GEN-LAST:event_startLoanButtomActionPerformed

    private void cancelReservationButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReservationButtomActionPerformed
        // TODO add your handling code here:
        int row = reserveTable.getSelectedRow();
        if(row!=-1){
            if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==0){
                reserveControl.cancelReserve(reserveTable.getValueAt(row, 0).toString());
                loadProfileReserves();
                JOptionPane.showMessageDialog(null, "A cancelado exitosamente la reserva");
            } else{
                if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==1){
                    reserveControl.cancelReserve(reserveTable.getValueAt(row, 0).toString());
                    loadProfileReserves();
                    JOptionPane.showMessageDialog(null, "A cancelado exitosamente la reserva");
                    
                } else{
                    if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==2){
                        JOptionPane.showMessageDialog(null, "Esta reserva ya esta Terminada, no puede cancelarla.");
                    } else{
                        if(reserveControl.verifyReserve(reserveTable.getValueAt(row, 0).toString())==3){
                            JOptionPane.showMessageDialog(null, "Esta reserva esta Incumplida, no puede cancelarla y se le a colocado una multa.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Esta reserva ya esta cancelada, no puede cancelarla otra vez.");
                        }
                    }
                }
            }                      
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }
    }//GEN-LAST:event_cancelReservationButtomActionPerformed

    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        // TODO add your handling code here:
        Reserve reserve;
        String inputValue;
        String typeSearch;

        if(nameTextField.getText().length()>0){

            inputValue=nameTextField.getText();
            typeSearch=(String)typeSearchCombo.getSelectedItem();
            typeSearch = traduction(typeSearch);

            reserve = reserveControl.searchProfileReserve(inputValue, typeSearch, sessionUser.getIdentification());
            if(reserve.getCode()!= null){
                JOptionPane.showMessageDialog(null,"Bùsqueda Exitosa");
                listSearchProfileReserve(inputValue,typeSearch,sessionUser.getIdentification());
            }
            else{
                JOptionPane.showMessageDialog(null,"No se encontrò ninguna Reserva que coincida con la bùsqueda");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }

    }//GEN-LAST:event_searchButtomActionPerformed

    private void backButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtomActionPerformed
        // TODO add your handling code here:
        MenuLoan menuLoan = new MenuLoan(sessionUser);
        menuLoan.setSize(639,483);
        menuLoan.setLocation(0,0);

        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(menuLoan);
    }//GEN-LAST:event_backButtomActionPerformed

    private void showInfoProfileReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInfoProfileReserveActionPerformed
        // TODO add your handling code here:
                int row = reserveTable.getSelectedRow();
        if(row!=-1){
        ShowInfoProfileReserve  showInfoProfileReserve= new ShowInfoProfileReserve(sessionUser);
        showInfoProfileReserve.setSize(639,494);
        showInfoProfileReserve.setLocation(0,0);
        
        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(showInfoProfileReserve);
        
        
        String code=reserveTable.getValueAt(row, 0).toString();
        String nameUser=reserveTable.getValueAt(row, 1).toString();
        String nameEquipment=reserveTable.getValueAt(row, 2).toString();
        
        showInfoProfileReserve.setValues(code, nameUser, nameEquipment);
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
       }
    }//GEN-LAST:event_showInfoProfileReserveActionPerformed

    public void loadProfileReserves(){
        
        ArrayList <Object[]> myReserves = new ArrayList <>();
        myReserves = reserveControl.listProfileReserves(sessionUser.getIdentification());

        DefaultTableModel modelo = (DefaultTableModel) reserveTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<myReserves.size(); i++ ){
            modelo.addRow(myReserves.get(i));
            reserveTable.setModel(modelo);
        }     
    }
    
    public String traduction(String word){
        switch (word) {
            case "Codigo":
             word = "code";
             break;
             case "Articulo":
             word = "name";
             break;
             case "Estado":
             word = "state";
             break;
             default:
             System.out.println("error");
             break;} 
             
             return  word;
        }
    
    public void listSearchProfileReserve(String inputValue, String typeSearch, String userIdentification){
            
        ArrayList <Object[]> reserves = new ArrayList <>();
        reserves = reserveControl.listSearchProfileReserve(inputValue, typeSearch, userIdentification);

        DefaultTableModel modelo = (DefaultTableModel) reserveTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<reserves.size(); i++ ){
        modelo.addRow(reserves.get(i));
        reserveTable.setModel(modelo);
            }     
        }
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButtom;
    private javax.swing.JButton cancelReservationButtom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTable reserveTable;
    private javax.swing.JButton searchButtom;
    private javax.swing.JButton showInfoProfileReserve;
    private javax.swing.JButton startLoanButtom;
    private javax.swing.JComboBox<String> typeSearchCombo;
    // End of variables declaration//GEN-END:variables
}
