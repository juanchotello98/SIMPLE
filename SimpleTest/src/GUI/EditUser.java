/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.UserControl;
import Logic.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class EditUser extends javax.swing.JPanel {
    UserControl userControl;
    
    /**
     * Creates new form EditUser
     */
    public EditUser() {
        initComponents();
        userControl = new UserControl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listLabel = new javax.swing.JLabel();
        typeSearchCombo = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        searchButtom = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        editSelectUser = new javax.swing.JButton();

        listLabel.setBackground(new java.awt.Color(153, 153, 153));
        listLabel.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        listLabel.setForeground(new java.awt.Color(235, 30, 0));
        listLabel.setText("Editar  Usuarios");
        listLabel.setAlignmentY(0.0F);
        listLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        typeSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Apellido", "Identificacion", "Estado"}));

        nameTextField.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        nameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Search.png"))); // NOI18N
        searchButtom.setBorderPainted(false);
        searchButtom.setContentAreaFilled(false);
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Identificacion", "Nombres", "Apellidos", " Email", "Cargo", "Tipo de Identificacion", "Telefono", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);

        editSelectUser.setText("Editar");
        editSelectUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(listLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(editSelectUser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButtom)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editSelectUser, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        // TODO add your handling code here:
        User user;
        String inputValue;
        String typeSearch;

        if(nameTextField.getText().length()>0){

            inputValue=nameTextField.getText();
            typeSearch=(String)typeSearchCombo.getSelectedItem();
            typeSearch = traduction(typeSearch);

            user = userControl.searchUser(inputValue, typeSearch);

            if(user.getCode()!= null){

                JOptionPane.showMessageDialog(null,"Bùsqueda Exitosa");
                listSearchUser(inputValue,typeSearch);

            }
            else{
                JOptionPane.showMessageDialog(null,"No se encontrò ningun Equipo que coincida con la bùsqueda");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }
    }//GEN-LAST:event_searchButtomActionPerformed

    private void editSelectUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectUserActionPerformed
        // TODO add your handling code here:
        
        EditUserForm editUserForm = new EditUserForm();
        editUserForm.setSize(639,483);
        editUserForm.setLocation(0,0);
        
        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(editUserForm);
        
        int row = userTable.getSelectedRow();
        String code=userTable.getValueAt(row, 0).toString();
        String identification=userTable.getValueAt(row, 1).toString();
        String firstName=userTable.getValueAt(row, 2).toString();
        String lastName=userTable.getValueAt(row, 3).toString();
        String email=userTable.getValueAt(row, 4).toString();
        String charge=userTable.getValueAt(row, 5).toString();
        String typeID=userTable.getValueAt(row, 6).toString();
        String phone=userTable.getValueAt(row, 7).toString();
        String state=userTable.getValueAt(row, 8).toString();
        
        editUserForm.setValues(code, identification, firstName, lastName, email, charge, typeID, phone, state);
        
    }//GEN-LAST:event_editSelectUserActionPerformed

    public void listSearchUser(String inputValue, String typeSearch){
            
        ArrayList <Object[]> users = new ArrayList <>();
        users = userControl.listSearchUser(inputValue, typeSearch);
            
        DefaultTableModel modelo = (DefaultTableModel) userTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<users.size(); i++ ){
        modelo.addRow(users.get(i));
        userTable.setModel(modelo);
            }     
        }
    
    public String traduction(String word){
        
        switch (word) {
           case "Identificacion":
             word = "identification";
             break;
             case "Nombre":
             word = "firstName";
             break;
             case "Apellido":
             word = "lastName";
             break;
             case "Estado":
             word = "state";
             break;
             default:
             System.out.println("error");
             break;} 
             
             return  word;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editSelectUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton searchButtom;
    private javax.swing.JComboBox<String> typeSearchCombo;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
