/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.EquipmentControl;
import Controller.LoanControl;
import DataAccess.Conection;
import Logic.Equipment;
import Logic.User;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class ListEquipment extends javax.swing.JPanel {
    EquipmentControl equipmentControl;
    LoanControl loanControl;
    User sessionUser;

    /**
     * Creates new form ListEquipment
     */
    public ListEquipment(User sessionUser) {
        initComponents();
        equipmentControl = new EquipmentControl();
        loanControl = new LoanControl();
        this.sessionUser=sessionUser;
        loadInventory();
    }
    
    public void loadInventory(){
        
    ArrayList <Object[]> inventory = new ArrayList <>();
    inventory = equipmentControl.listEquipment();
            
    DefaultTableModel modelo = (DefaultTableModel) equipmentTable.getModel();
    modelo.setRowCount(0);  

    for(int i=0; i<inventory.size(); i++ ){
    modelo.addRow(inventory.get(i));
    equipmentTable.setModel(modelo);
            }     
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        equipmentTable = new javax.swing.JTable();
        typeSearchCombo = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        searchButtom = new javax.swing.JButton();
        registerLabel = new javax.swing.JLabel();
        backButtom = new javax.swing.JButton();
        showInfo = new javax.swing.JButton();
        takeOutButtom = new javax.swing.JButton();
        reserveButtom = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        equipmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Articulo", " Numero de Serie", "Descripion", " Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equipmentTable.setSelectionBackground(new java.awt.Color(255, 0, 0));
        equipmentTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(equipmentTable);
        if (equipmentTable.getColumnModel().getColumnCount() > 0) {
            equipmentTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        typeSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Serie", "Estado"}));
        typeSearchCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        nameTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        searchButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SearchButtom.png"))); // NOI18N
        searchButtom.setBorderPainted(false);
        searchButtom.setContentAreaFilled(false);
        searchButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButtom.setPreferredSize(new java.awt.Dimension(165, 45));
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });

        registerLabel.setBackground(new java.awt.Color(153, 153, 153));
        registerLabel.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        registerLabel.setForeground(new java.awt.Color(235, 30, 0));
        registerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ListarEquiposTitle.png"))); // NOI18N
        registerLabel.setAlignmentY(0.0F);
        registerLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        backButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VolverButtom.png"))); // NOI18N
        backButtom.setBorderPainted(false);
        backButtom.setContentAreaFilled(false);
        backButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButtom.setPreferredSize(new java.awt.Dimension(45, 45));
        backButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtomActionPerformed(evt);
            }
        });

        showInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VerInfoButtom.png"))); // NOI18N
        showInfo.setBorderPainted(false);
        showInfo.setContentAreaFilled(false);
        showInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInfoActionPerformed(evt);
            }
        });

        takeOutButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SolicitarText.png"))); // NOI18N
        takeOutButtom.setBorderPainted(false);
        takeOutButtom.setContentAreaFilled(false);
        takeOutButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        takeOutButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeOutButtomActionPerformed(evt);
            }
        });

        reserveButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ReservarText.png"))); // NOI18N
        reserveButtom.setBorderPainted(false);
        reserveButtom.setContentAreaFilled(false);
        reserveButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reserveButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(reserveButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(takeOutButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(reserveButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(takeOutButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        // TODO add your handling code here:
        Equipment equipment;
        String inputValue;
        String typeSearch;

        if(nameTextField.getText().length()>0){

            inputValue=nameTextField.getText();
            typeSearch=(String)typeSearchCombo.getSelectedItem();
            typeSearch = traduction(typeSearch);

            equipment = equipmentControl.searchEquipment(inputValue, typeSearch);

            if(equipment.getNumberEquipment()!= null){

                JOptionPane.showMessageDialog(null,"Bùsqueda Exitosa");   
                listSearchEquipment(inputValue,typeSearch);

            }
            else{
                JOptionPane.showMessageDialog(null,"No se encontrò ningun Equipo que coincida con la bùsqueda");              
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }

    }//GEN-LAST:event_searchButtomActionPerformed

    private void backButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtomActionPerformed
        // TODO add your handling code here:
        
        MenuEquipment menuEquipment = new MenuEquipment(sessionUser);
        menuEquipment.setSize(639,483);
        menuEquipment.setLocation(0,0);

        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(menuEquipment);
        
    }//GEN-LAST:event_backButtomActionPerformed

    private void showInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInfoActionPerformed
        // TODO add your handling code here:

        int row = equipmentTable.getSelectedRow();
        if(row!=-1){
            ShowInfoEquipment showInfoEquipment = new ShowInfoEquipment(sessionUser);
            showInfoEquipment.setSize(639,494);
            showInfoEquipment.setLocation(0,0);

            this.removeAll();
            this.revalidate();
            this.repaint();
            this.add(showInfoEquipment);

            String code=equipmentTable.getValueAt(row, 0).toString();
            String name=equipmentTable.getValueAt(row, 1).toString();
            String serie=equipmentTable.getValueAt(row, 2).toString();
            String description=equipmentTable.getValueAt(row, 3).toString();
            String state=equipmentTable.getValueAt(row, 4).toString();

            showInfoEquipment.setValues(code, name, serie, description, state);
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }

    }//GEN-LAST:event_showInfoActionPerformed

    private void takeOutButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeOutButtomActionPerformed
        // TODO add your handling code here:
        int row = equipmentTable.getSelectedRow();
        if(row!=-1){
            if(loanControl.verifyEquipment(equipmentTable.getValueAt(row, 2).toString())){
                loanControl.takeOutEquipment(sessionUser.getIdentification(), equipmentTable.getValueAt(row, 2).toString());
                JOptionPane.showMessageDialog(null, "Prestamo realizado con exito");
                loadInventory();
            } else{
                JOptionPane.showMessageDialog(null, "Este equipo ya esta en prestamo.");
            }
                       
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }
    }//GEN-LAST:event_takeOutButtomActionPerformed

    private void reserveButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtomActionPerformed
        // TODO add your handling code here:
        int row = equipmentTable.getSelectedRow();
        if(row!=-1){
            if(loanControl.verifyReserve(equipmentTable.getValueAt(row, 2).toString())){
                if(loanControl.reserveEquipment(sessionUser.getIdentification(), loanControl.getLoanReserve(equipmentTable.getValueAt(row, 2).toString()))){
                    JOptionPane.showMessageDialog(null, "Reserva realizada con exito, gonorrea.");
                } else {
                    JOptionPane.showMessageDialog(null, "Solo se pueden realizar reservas 3 dias antes de que se acabe el prestamo. Fecha final del prestamo seleccionado : "+loanControl.getLoanFinalDate(loanControl.getLoanReserve(equipmentTable.getValueAt(row, 2).toString())));
                }
                
            } else{
                JOptionPane.showMessageDialog(null, "Este equipo esta "+equipmentTable.getValueAt(row, 4).toString()+", no se puede reservar.");
            }
                       
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }
    }//GEN-LAST:event_reserveButtomActionPerformed

    public void listSearchEquipment(String inputValue, String typeSearch){
            
        ArrayList <Object[]> inventory = new ArrayList <>();
        inventory = equipmentControl.listSearchEquipment(inputValue, typeSearch);
            
        DefaultTableModel modelo = (DefaultTableModel) equipmentTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<inventory.size(); i++ ){
        modelo.addRow(inventory.get(i));
        equipmentTable.setModel(modelo);
            }     
        }
    
    public String traduction(String word){
            
        switch (word) {
           case "Nombre":
             word = "Name";
             break;
             case "Serie":
             word = "SerialNumber";
             break;
             case "Estado":
             word = "State";
             break;
             default:
             System.out.println("error");
             break;} 
             
             return  word;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButtom;
    private javax.swing.JTable equipmentTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JButton reserveButtom;
    private javax.swing.JButton searchButtom;
    private javax.swing.JButton showInfo;
    private javax.swing.JButton takeOutButtom;
    private javax.swing.JComboBox<String> typeSearchCombo;
    // End of variables declaration//GEN-END:variables
}
