/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.UserControl;
import Logic.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class ListProjectMember extends javax.swing.JPanel {
    User sessionUser;
    UserControl userControl;
    String projectID;
    /**
     * Creates new form ListProjectMember
     */
    public ListProjectMember(User sessionUser, String projectID) {
        initComponents();
        this.sessionUser=sessionUser;
        userControl= new UserControl();
        loadProjectUser(projectID);
        this.projectID=projectID;
        displayMenu(sessionUser.getCharge());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeSearchCombo = new javax.swing.JComboBox<>();
        nameTextField = new javax.swing.JTextField();
        searchButtom = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        showInfo = new javax.swing.JButton();
        listLabel = new javax.swing.JLabel();
        backButtom = new javax.swing.JButton();
        dropUserButtom = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        typeSearchCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Identificacion", "Nombre", "Apellido", "Email", "Telefono"}));
        typeSearchCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        typeSearchCombo.setPreferredSize(new java.awt.Dimension(28, 27));

        nameTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        searchButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SearchButtom.png"))); // NOI18N
        searchButtom.setBorderPainted(false);
        searchButtom.setContentAreaFilled(false);
        searchButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtomActionPerformed(evt);
            }
        });

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Identificacion", "Nombres", "Apellidos", " Email", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setSelectionBackground(new java.awt.Color(235, 30, 0));
        userTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(userTable);

        showInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VerInfoButtom.png"))); // NOI18N
        showInfo.setBorderPainted(false);
        showInfo.setContentAreaFilled(false);
        showInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showInfoActionPerformed(evt);
            }
        });

        listLabel.setBackground(new java.awt.Color(153, 153, 153));
        listLabel.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        listLabel.setForeground(new java.awt.Color(235, 30, 0));
        listLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ListarUsuariosTitle.png"))); // NOI18N
        listLabel.setAlignmentY(0.0F);
        listLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        backButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/VolverButtom.png"))); // NOI18N
        backButtom.setBorderPainted(false);
        backButtom.setContentAreaFilled(false);
        backButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButtom.setPreferredSize(new java.awt.Dimension(45, 45));
        backButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtomActionPerformed(evt);
            }
        });

        dropUserButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/CancelarButton.png"))); // NOI18N
        dropUserButtom.setBorderPainted(false);
        dropUserButtom.setContentAreaFilled(false);
        dropUserButtom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dropUserButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropUserButtomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
            .addComponent(listLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 90, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144)
                .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(dropUserButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(listLabel)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeSearchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(searchButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButtom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropUserButtom))
                        .addGap(63, 63, 63))))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void displayMenu(String userCharge){
        switch (userCharge) {
        case "Administrador":
        dropUserButtom.setVisible(true);
        break;
        case "Miembro":
        dropUserButtom.setVisible(false);
        break;
        case "Coordinador de Equipos":
        dropUserButtom.setVisible(false);
        break;
        case "Lider de Proyecto":
        dropUserButtom.setVisible(true);
        break;
        case "Director de Laboratorio":
        dropUserButtom.setVisible(true);
        break;
        default:
        System.out.println("error" );
        break;}      
}
    
    private void searchButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtomActionPerformed
        // TODO add your handling code here:
        User user;
        String inputValue;
        String typeSearch;

        if(nameTextField.getText().length()>0){

            inputValue=nameTextField.getText();
            typeSearch=(String)typeSearchCombo.getSelectedItem();
            typeSearch = traduction(typeSearch);

            user = userControl.searchProjecUser(inputValue, typeSearch, projectID);

            if(user.getCode()!= null){

                JOptionPane.showMessageDialog(null,"Bùsqueda Exitosa");
                listSearchProjectUser(inputValue,typeSearch,projectID);

            }
            else{
                JOptionPane.showMessageDialog(null,"No se encontrò ningun Equipo que coincida con la bùsqueda");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }
    }//GEN-LAST:event_searchButtomActionPerformed

    private void showInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showInfoActionPerformed
        // TODO add your handling code here:

        int row = userTable.getSelectedRow();
        if(row!=-1){
            ShowInfoUserProject showInfoUserProject = new ShowInfoUserProject(sessionUser,projectID);
            showInfoUserProject.setSize(639,494);
            showInfoUserProject.setLocation(0,0);

            this.removeAll();
            this.revalidate();
            this.repaint();
            this.add(showInfoUserProject);

            String code=userTable.getValueAt(row, 0).toString();
            String identification=userTable.getValueAt(row, 1).toString();
            String firstName=userTable.getValueAt(row, 2).toString();
            String lastName=userTable.getValueAt(row, 3).toString();
            String email=userTable.getValueAt(row, 4).toString();
            //String charge=userTable.getValueAt(row, 5).toString();
            //String typeID=userTable.getValueAt(row, 6).toString();
            String phone=userTable.getValueAt(row, 5).toString();
            //String state=userTable.getValueAt(row, 8).toString();

            showInfoUserProject.setValues(code, identification, firstName, lastName, email, phone);
        }
        else{ JOptionPane.showMessageDialog(null, "Por favor Seleccione una Fila");
        }

    }//GEN-LAST:event_showInfoActionPerformed

    private void backButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtomActionPerformed
        // TODO add your handling code here:
        ListProject listProject = new ListProject(sessionUser);
        listProject.setSize(639,483);
        listProject.setLocation(0,0);

        this.removeAll();
        this.revalidate();
        this.repaint();
        this.add(listProject);

    }//GEN-LAST:event_backButtomActionPerformed

    private void dropUserButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropUserButtomActionPerformed
        // TODO add your handling code here:
        int row = userTable.getSelectedRow();
        if(row!=-1){

        String identification=userTable.getValueAt(row, 1).toString();

        int numFilas = userControl.dropUserProject(identification, projectID);
        
        if (numFilas == 1){
                JOptionPane.showMessageDialog(null, "Se Eliminó al usuario del proyecto");
                loadProjectUser(projectID);
            }
            else {
                JOptionPane.showMessageDialog(null, "Ocurrio un problema al eliminar");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor completa todos los campos");
        }
        
    }//GEN-LAST:event_dropUserButtomActionPerformed

    public void listSearchProjectUser(String inputValue, String typeSearch,String identificationProject){
            
        ArrayList <Object[]> users = new ArrayList <>();
        users = userControl.listSearchProjectUser(inputValue, typeSearch, identificationProject);
            
        DefaultTableModel modelo = (DefaultTableModel) userTable.getModel();
        modelo.setRowCount(0);  

        for(int i=0; i<users.size(); i++ ){
        modelo.addRow(users.get(i));
        userTable.setModel(modelo);
            }     
        }
    
    public void loadProjectUser(String projectID){
        
    ArrayList <Object[]> users = new ArrayList <>();
    users = userControl.listUserProject(projectID);
            
    DefaultTableModel modelo = (DefaultTableModel) userTable.getModel();
    modelo.setRowCount(0);  

    for(int i=0; i<users.size(); i++ ){
    modelo.addRow(users.get(i));
    userTable.setModel(modelo);
    
}     
    }
    
        public String traduction(String word){
        
        switch (word) {
           case "Identificacion":
             word = "identification";
             break;
             case "Nombre":
             word = "firstName";
             break;
             case "Apellido":
             word = "lastName";
             break;
             case "Email":
             word = "email";
             break;
             case "Telefono":
             word = "phone";
             break;
             default:
             System.out.println("error");
             break;} 
             
             return  word;
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButtom;
    private javax.swing.JButton dropUserButtom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton searchButtom;
    private javax.swing.JButton showInfo;
    private javax.swing.JComboBox<String> typeSearchCombo;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
